{"version":3,"sources":["web3.js","consent.js","components/CreateParty.js","components/CreateAccount.js","components/NavigationBar.js","App.js","index.js"],"names":["web3","Web3","window","currentProvider","abi","require","consent","eth","Contract","CreateParty","state","modalOpen","partyName","maxNumberOfGuests","timeLimit","errorMessage","loading","handleOpen","_this","setState","message","handleClose","onSubmit","_callee","event","accounts","regenerator_default","a","wrap","_context","prev","next","preventDefault","getAccounts","sent","methods","createParty1A","send","from","createParty1B","createParty1C","createParty1D","t0","stop","_this2","this","react_default","createElement","Modal","trigger","Button","color","onClick","inverted","open","onClose","Header","icon","content","Content","Form","error","Field","placeholder","onChange","target","value","Message","header","primary","type","Icon","name","Actions","Component","CreateAccount","firstName","lastName","currentAccount","profileDoesNotExist","call","createProfile","on","confirmationNumber","receipt","document","getElementById","id","centered","NavigationBar","contractSymbol","contractName","Menu","style","marginTop","Item","position","Dropdown","item","simple","size","postion","width","height","src","alt","App","Container","components_NavigationBar","Card","Group","itemsPerRow","stackable","fluid","raised","components_CreateAccount","components_CreateParty","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.4034d2cf.chunk.js","sourcesContent":["import Web3 from 'web3';\n\nconst web3 = new Web3(window.web3.currentProvider);\n\nexport default web3;","import web3 from \"./web3\";\n\n// const address = \"0xfB0C083466f440e3dbC996ba9059323F701f9214\"; // contract without modifier-functions\nconst address = \"0xA61dB4628622109684E0E78cDCa91eBAeAa4C74b\"; // newest contract\nconst abi = require(\"./compiled/ConsentContract\")[\"abi\"];\n// const bytecode = require(\"./compiled/ConsentContract.json\")[\"bytecode\"];\n\n// console.log(abi); // To see if the abi works correctly. It does [:\n\nexport default new web3.eth.Contract(abi, address);\n","import React, { Component } from \"react\";\nimport { Button, Header, Icon, Modal, Form, Message } from \"semantic-ui-react\";\nimport web3 from \"../web3\";\nimport consent from \"../consent\";\n\nclass CreateParty extends Component {\n  state = {\n    modalOpen: false,\n    partyName: \"\",\n    maxNumberOfGuests: \"\",\n    timeLimit: \"\",\n    errorMessage: \"\",\n    loading: false\n  };\n\n  handleOpen = () => this.setState({\n    modalOpen: true,\n    partyName: \"\",\n    maxNumberOfGuests: \"\",\n    timeLimit: \"\",\n    message: \"\",\n    errorMessage: \"\"\n  });\n\n  handleClose = () => this.setState({ modalOpen: false });\n\n  onSubmit = async event => {\n    event.preventDefault();\n    if (!this.state.loading && this.state.partyName !== \"\") {\n      this.setState({\n        loading: true,\n        errorMessage: \"\",\n        message: \"waiting for blockchain transaction to complete...\"\n      });\n      try {\n        // console.log(consent.jsonInterface.getMethods());\n        const accounts = await web3.eth.getAccounts();\n\n        // No max number of guests specified.\n        // No time limit specified.\n        if (this.state.maxNumberOfGuests === \"\" && this.state.timeLimit === \"\") {\n          await consent.methods\n              .createParty1A(this.state.partyName)\n              .send({\n                from: accounts[0]\n              });\n          this.setState({\n            loading: false,\n            message: \"Transaction approved. Party name: \" + this.state.partyName +\n                \" without a maximum number of guests \" +\n                \" that will close in 5 minutes.\"\n          });\n        }\n\n        // No max number of guests specified.\n        // Time limit is specified.\n        else if (this.state.maxNumberOfGuests === \"\" && this.state.timeLimit !== \"\") {\n          await consent.methods\n              .createParty1B(this.state.partyName, this.state.timeLimit)\n              .send({\n                from: accounts[0]\n              });\n          this.setState({\n            loading: false,\n            message: \"Transaction approved. Party name: \" + this.state.partyName +\n                \" without a maximum number of guests \" +\n                \" that will close in \" + this.state.timeLimit + \" minutes.\"\n          });\n        }\n\n        // Max number of guests is specified.\n        // No time limit specified.\n        else if (this.state.maxNumberOfGuests !== \"\" && this.state.timeLimit === \"\") {\n          await consent.methods\n              .createParty1C(this.state.partyName, this.state.maxNumberOfGuests)\n              .send({\n                from: accounts[0]\n              });\n          this.setState({\n            loading: false,\n            message: \"Transaction approved. Party name: \" + this.state.partyName +\n                \" with a maximum number of \" + this.state.maxNumberOfGuests+ \" guests \" +\n                \" that will close in 5 minutes.\"\n          });\n        }\n\n        // Max number of guests is specified.\n        // Time limit is specified.\n        else if (this.state.maxNumberOfGuests !== \"\" && this.state.timeLimit !== \"\") {\n          await consent.methods\n              .createParty1D(this.state.partyName, this.state.timeLimit, this.state.maxNumberOfGuests)\n              .send({\n                from: accounts[0]\n              });\n          this.setState({\n            loading: false,\n            message: \"Transaction approved. Party name: \" + this.state.partyName +\n                \" with a maximum number of \" + this.state.maxNumberOfGuests+ \" guests \" +\n                \" that will close in \" + this.state.timeLimit + \" minutes.\"\n          });\n        }\n      } catch (err) {\n        this.setState({\n          loading: false,\n          errorMessage: err.message,\n          message: \"Error: Transaction rejected.\"\n        });\n      }\n    }\n  };\n\n  render() {\n    return (\n        <Modal\n            trigger={\n              <Button color=\"purple\" onClick={this.handleOpen} inverted>\n                Create a New Party\n              </Button>\n            }\n            open={this.state.modalOpen}\n            onClose={this.handleClose}\n        >\n          <Header icon=\"browser\" content=\"Create a New Party\" />\n          <Modal.Content>\n            <Form onSubmit={this.onSubmit} error={!!this.state.errorMessage}>\n              <Form.Field>\n                <label>Your Party Name</label>\n                <input\n                    placeholder=\"Party Name\"\n                    onChange={event =>\n                        this.setState({\n                          partyName: event.target.value\n                        })}\n                />\n              </Form.Field>\n\n              <Form.Field>\n                <label>Maximum Guests permitted to join your party</label>\n                <input\n                    placeholder=\"(optional) defaults to no limit\"\n                    onChange={event =>\n                        this.setState({\n                          maxNumberOfGuests: event.target.value\n                        })}\n                />\n              </Form.Field>\n\n              <Form.Field>\n                <label>Time Limit until the Party Closes (in minutes)</label>\n                <input\n                    placeholder=\"(optional) defaults to 5 minutes\"\n                    onChange={event =>\n                        this.setState({\n                          timeLimit: event.target.value\n                        })}\n                />\n              </Form.Field>\n\n              <Message error header=\"Oops!\" content={this.state.errorMessage} />\n              <Button primary type=\"submit\" loading={this.state.loading}>\n                <Icon name=\"check\" />\n                Open the party!\n              </Button>\n              <hr />\n              <h2>{this.state.partyName}</h2>\n              <h2>{this.state.message}</h2>\n            </Form>\n          </Modal.Content>\n          <Modal.Actions>\n            <Button color=\"red\" onClick={this.handleClose} inverted>\n              <Icon name=\"cancel\" /> Close\n            </Button>\n          </Modal.Actions>\n        </Modal>\n    );\n  }\n}\n\nexport default CreateParty;","import React, { Component } from \"react\";\nimport { Button, Header, Icon, Modal, Form, Message } from \"semantic-ui-react\";\nimport web3 from \"../web3\";\nimport consent from \"../consent\";\n\nclass CreateAccount extends Component {\n  state = {\n    modalOpen: false,\n    firstName: \"\",\n    lastName: \"\",\n    errorMessage: \"\",\n    loading: false\n  };\n\n  // Upon opening the Create Account modal, clear everything to a clean slate.\n  handleOpen = () => this.setState({\n    modalOpen: true,\n    firstName: \"\",\n    lastName: \"\",\n    message: \"Please enter your first and last name to create an account.\",\n    errorMessage: \"\"\n  });\n\n  handleClose = () => this.setState({ modalOpen: false });\n\n  onSubmit = async event => {\n    event.preventDefault();\n    const accounts = await web3.eth.getAccounts(); // retrieves the current metamask account.\n    let currentAccount = accounts[0];\n\n    if (!this.state.loading) {\n      if (this.state.firstName !== \"\") {\n        if (this.state.lastName !== \"\") {\n          if (await consent.methods\n              .profileDoesNotExist() // The \"modifier-function\" that returns a boolean.\n              .call({ from: currentAccount })) {\n            // Only able to reach this point if the user has not created an account for their current metamask address.\n            this.setState({\n              loading: true,\n              errorMessage: \"\",\n              message: \"waiting for blockchain transaction to complete...\"\n            });\n            try {\n              await consent.methods\n                  .createProfile(this.state.firstName, this.state.lastName) // stores the user's first and last name.\n                  .send({\n                    from: currentAccount\n                  })\n                  .on('confirmation', (confirmationNumber, receipt) => {\n                    // Can only update this.state's first/last/message once the transaction has been approved.\n                    this.setState({\n                      loading: false,\n                      firstName: \"\", // Clear the first name field so they don't click it again.\n                      lastName: \"\", // Clear the last name field.\n                      message: \"Success: Your account has been created.\" // show the user the transaction was successful\n                      })\n                  });\n              document.getElementById('first_input').value = \"\";\n              document.getElementById('last_input').value = \"\";\n            } catch (err) {\n              // User clicked the reject button in the metamask popup window.\n              this.setState({\n                loading: false,\n                errorMessage: err.message,\n                message: \"Error: Transaction rejected.\"\n              });\n            }\n          } else {\n            // this is when the \"modifier-function\", profileDoesNotExist(), returns false.\n            this.setState({\n              firstName: \"\", // Clear the first name field so they don't click it again.\n              lastName: \"\", // Clear the last name field.\n              message: \"You have already created an account and cannot create another.\"\n            });\n            document.getElementById('first_input').value = \"\";\n            document.getElementById('last_input').value = \"\";\n          }\n        } else {\n          // last name field is empty.\n          this.setState({\n            message: \"Please enter your last name into the correct field.\"\n          });\n        }\n      } else {\n        // first name field is empty.\n        this.setState({\n          message: \"Please enter your first name into the correct field.\"\n        });\n      }\n    } else {\n      // User clicked while loading icon is still spinning.\n      this.setState({\n        message: \"Sorry for the delay, the transaction is still processing.\"\n      });\n    }\n  };\n\n  render() {\n    return (\n      <Modal\n        trigger={\n          <Button color=\"green\" onClick={this.handleOpen} inverted>\n            Create an Account\n          </Button>\n        }\n        open={this.state.modalOpen}\n        onClose={this.handleClose}\n      >\n        <Header icon=\"browser\" content=\"Create an Account\" />\n        <Modal.Content>\n          <Form onSubmit={this.onSubmit} error={!!this.state.errorMessage}>\n            <Form.Field>\n              <label>First Name</label>\n              <input id=\"first_input\"\n                placeholder=\"First Name\"\n                onChange={event => this.setState({ firstName: event.target.value })}\n              />\n            </Form.Field>\n            <Form.Field>\n              <label>Last Name</label>\n              <input id=\"last_input\"\n                placeholder=\"Last Name\"\n                onChange={event => this.setState({ lastName: event.target.value })}\n              />\n            </Form.Field>\n            <Message error header=\"Oops!\" content={this.state.errorMessage} />\n            <Button primary type=\"submit\" loading={this.state.loading} centered={true}>\n              <Icon name=\"check\" />\n              Create Your Account!\n            </Button>\n\n            <hr />\n            <h2>{this.state.firstName} {this.state.lastName}</h2>\n            <h2>{this.state.message}</h2>\n          </Form>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button color=\"red\" onClick={this.handleClose} inverted>\n            <Icon name=\"cancel\" /> Close\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    );\n  }\n}\n\nexport default CreateAccount;","import React, { Component } from \"react\";\nimport { Menu, Header, Dropdown } from \"semantic-ui-react\";\n// import consent from \"../consent\";\n\nclass NavigationBar extends Component {\n  state = {\n    contractSymbol: \"\",\n    contractName: \"\"\n  };\n\n  async componentDidMount() {\n    const contractSymbol = \"Hello\"; // await consent.methods.symbol().call();\n    const contractName = \"World\"; // await consent.methods.name().call();\n    this.setState({ contractSymbol, contractName });\n  }\n\n  render() {\n    return (\n        <Menu style={{marginTop: \"10px\"}}>\n          <Menu.Item position=\"left\">\n            <Dropdown item icon=\"wrench\" simple>\n              <Dropdown.Menu>\n                <Dropdown.Item>Name={this.state.contractSymbol}</Dropdown.Item>\n                <Dropdown.Item>Symbol={this.state.contractName}</Dropdown.Item>\n              </Dropdown.Menu>\n            </Dropdown>\n          </Menu.Item>\n          <Menu.Item>\n            <Header size=\"large\">Welcome to the Consent-saving application!</Header>\n          </Menu.Item>\n          <Menu.Item postion=\"right\">\n            <img style={{width: 100, height: 86}}\n                 src=\"CYA_Logo.png\"\n                 alt=\"CYA logo\"\n            />\n          </Menu.Item>\n        </Menu>\n    );\n  }\n}\n\nexport default NavigationBar;","import React, { Component } from 'react';\n// import web3 from \"./web3\";\n// import consent from \"./consent\";\nimport { Container, Card } from \"semantic-ui-react\";\nimport CreateParty from \"./components/CreateParty\";\nimport CreateAccount from \"./components/CreateAccount\";\n\nimport NavigationBar from \"./components/NavigationBar\";\n\nclass App extends Component {\n  state = {\n    value: \"\",\n    message: \"\",\n    // userAddress: \"\"\n  };\n\n  // onSubmit = async event => {\n  //   event.preventDefault();\n  //   // const accounts = await web3.eth.getAccounts();\n  //   this.setState({\n  //     message: \"Waiting for blockchain transaction to complete...\"\n  //   });\n  //\n  //   // await consent.methods.createParty(this.state.value).send({\n  //   //   from: accounts[0]\n  //   // });\n  //   //\n  //   // this.setState({message: \"Your party has been registered!\"});\n  // };\n\n  render() {\n    return (\n        <Container>\n          <NavigationBar />\n          <div>\n            <Card.Group itemsPerRow={2} stackable={true}>\n\n              <Card fluid color=\"green\" header=\"Sign Up\" centered=\"true\" raised=\"false\">\n                <Card.Content>\n                  <h4>\n                    Create an account.\n                  </h4>\n                  <CreateAccount />\n                </Card.Content>\n              </Card>\n              <Card fluid color=\"purple\" header=\"Register to Play\" centered=\"true\">\n                <Card.Content>\n                  <h4>\n                    Create a party and invite others.\n                  </h4>\n                  <CreateParty />\n                </Card.Content>\n              </Card>\n\n            </Card.Group>\n            <Card.Group itemsPerRow={2} stackable={true}>\n              <Card fluid color=\"orange\" header=\"Add a guest\" centered=\"true\">\n                <Card.Content>\n                  <h4>\n                    Add a guest to the party.\n                  </h4>\n                </Card.Content>\n              </Card>\n              <Card fluid color=\"yellow\" header=\"Finalize\" centered=\"true\">\n                <Card.Content>\n                  <h4>\n                    Close the party.\n                  </h4>\n                </Card.Content>\n              </Card>\n\n            </Card.Group>\n          </div>\n\n        </Container>\n    );\n  }\n}\n\nexport default App;\n\n\n/* line 39\n              <Card color=\"red\" header=\"\">\n                <Card.Content>\n                  <h4>We will surely miss you!</h4>\n                  <br />\n                  <Unregister />\n                </Card.Content>\n              </Card>\n */","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'semantic-ui-css/semantic.min.css';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}